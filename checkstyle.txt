Starting audit...
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:1:9: Name 'Cards' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:23:17: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:36:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:36:24: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:36:43: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:36:56: Parameter x should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:36:63: Parameter y should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:45:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'hasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'hasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:49:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'removeCardOfMaxHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'removeCardOfMaxHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:49:39: Parameter cards should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:64:32: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:64:45: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:68:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHasAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHasAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:68:32: Parameter hasAttacked should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:72:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:72:39: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:72:52: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:76:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'useMinionAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'useMinionAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:76:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:76:34: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:80:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:84:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:84:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:88:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:92:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:92:27: Parameter frozen should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:96:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:100:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:100:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:104:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:108:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:112:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:116:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:120:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:124:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:128:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:132:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:136:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:140:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:144:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:148:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Card.java:152:5: Class 'Card' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:1:9: Name 'Cards.Environment' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:23:22: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:29:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'useEnvironmentAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'useEnvironmentAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:30:39: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:30:52: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:36:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:47:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:52:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:53:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:56:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:60:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:60:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Firestorm.java:65:5: Class 'Firestorm' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Firestorm' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:1:9: Name 'Cards.Environment' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:23:23: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:29:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'useEnvironmentAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'useEnvironmentAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:30:39: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:30:52: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:35:34: '3' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:45:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:50:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:51:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:55:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:59:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:59:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\HeartHound.java:63:5: Class 'HeartHound' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HeartHound' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:1:9: Name 'Cards.Environment' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:23:23: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:29:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'useEnvironmentAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'useEnvironmentAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:30:39: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:30:52: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:31:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:35:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:40:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:41:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:46:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:50:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:50:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Environment\Winterfell.java:54:5: Class 'Winterfell' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Winterfell' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:1:9: Name 'Cards.Hero' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:23:27: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:28:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:29:32: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:29:45: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:32:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:38:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:43:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:44:33: Parameter minionType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:48:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:52:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\EmpressThorina.java:52:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:1:9: Name 'Cards.Hero' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:23:28: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:28:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:29:32: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:29:45: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:30:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:34:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:39:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:40:33: Parameter minionType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:44:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:48:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\GeneralKocioraw.java:48:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:1:9: Name 'Cards.Hero' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:23:24: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:28:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:29:32: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:29:45: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:30:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:34:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:39:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:40:33: Parameter minionType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:44:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:48:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\KingMudface.java:48:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:1:9: Name 'Cards.Hero' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:23:22: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:28:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'useHeroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'useHeroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:29:32: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:29:45: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:35:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:44:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:49:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:50:33: Parameter minionType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:54:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:58:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Hero\LordRoyce.java:58:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:1:9: Name 'Cards.Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:22:22: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:28:5: Class 'Berserker' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Berserker' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:33:5: Class 'Berserker' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Berserker' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:34:33: Parameter minionType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:38:5: Class 'Berserker' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Berserker' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:42:5: Class 'Berserker' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Berserker' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:42:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Berserker.java:47:5: Class 'Berserker' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Berserker' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:1:9: Name 'Cards.Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:23:21: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:28:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'useMinionAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'useMinionAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:29:34: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:34:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:39:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:40:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:44:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:48:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:48:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Disciple.java:52:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:1:9: Name 'Cards.Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:22:20: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:28:5: Class 'Goliath' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Goliath' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:33:5: Class 'Goliath' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Goliath' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:34:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:38:5: Class 'Goliath' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Goliath' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:42:5: Class 'Goliath' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Goliath' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:42:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Goliath.java:47:5: Class 'Goliath' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Goliath' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:1:9: Name 'Cards.Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:23:18: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:29:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'useMinionAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'useMinionAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:30:34: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:38:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:43:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:44:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:48:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:52:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:52:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Miraj.java:57:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:1:9: Name 'Cards.Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:22:21: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:28:5: Class 'Sentinel' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sentinel' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:33:5: Class 'Sentinel' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sentinel' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:34:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:38:5: Class 'Sentinel' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sentinel' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:42:5: Class 'Sentinel' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sentinel' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:42:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Sentinel.java:47:5: Class 'Sentinel' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sentinel' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:1:9: Name 'Cards.Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:23:25: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:29:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'useMinionAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'useMinionAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:30:34: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:37:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:41:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:41:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:45:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:50:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:51:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheCursedOne.java:55:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:1:9: Name 'Cards.Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:23:22: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:29:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'useMinionAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'useMinionAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:30:34: Parameter cardAttacked should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:34:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:37:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:41:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:41:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:45:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:50:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:51:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\TheRipper.java:55:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:1:9: Name 'Cards.Minion' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:22:19: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:28:5: Class 'Warden' looks like designed for extension (can be subclassed), but the method 'getSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Warden' final or making the method 'getSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:33:5: Class 'Warden' looks like designed for extension (can be subclassed), but the method 'setSpecificType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Warden' final or making the method 'setSpecificType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:34:33: Parameter specificType should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:39:5: Class 'Warden' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Warden' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:43:5: Class 'Warden' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Warden' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:43:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Cards\Minion\Warden.java:48:5: Class 'Warden' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Warden' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:1:9: Name 'Decks' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:4:25: Using the '.*' form of import should be avoided - Cards.Environment.*. [AvoidStarImport]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:9:20: Using the '.*' form of import should be avoided - Cards.Minion.*. [AvoidStarImport]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:14:8: Unused import - java.util.Objects. [UnusedImports]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:21:18: Parameter inputDecks should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:37:42: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:38:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:40:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:42:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:44:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:46:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:48:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:50:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:52:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:54:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:56:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:58:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:60:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:62:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:64:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:66:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:71:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:75:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:79:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:83:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:87:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:91:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Decks\Decks.java:95:5: Class 'Decks' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Decks' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:19:21: Parameter newActionObject should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:19:49: Parameter objectMapper should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:19:76: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:21:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:23:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:25:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:29: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:29:31: Parameter newActionObject should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:29:59: Parameter objectMapper should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:29:86: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:30: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:33: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:33:31: Parameter newActionObject should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:33:59: Parameter objectMapper should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:33:86: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:39:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:40: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:41:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:42: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:49:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:58: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:58:31: Parameter newActionObject should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:58:59: Parameter objectMapper should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:58:86: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\ActionsInput.java:81:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\DecksInput.java:5:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\DecksInput.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\DecksInput.java:15:29: Parameter deckIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\DecksInput.java:15:42: Parameter seed should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:13:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:13:39: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:14:32: 'startGame' hides a field. [HiddenField]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:16:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:17:64: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:19:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:20:64: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:24: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:25: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\GameInput.java:32:35: Parameter playerTurn should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\fileio\Input.java:18:28: Parameter gameIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:1:9: Name 'GameLogic' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:7:8: Unused import - java.security.cert.CertPath. [UnusedImports]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:23:19: Parameter actionInput should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:23:45: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:35:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:36:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:64: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:78:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:82:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:86:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getHandIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getHandIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:90:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setHandIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setHandIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:94:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCardAttacker' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCardAttacker' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:98:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCardAttacker' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCardAttacker' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:102:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCardAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCardAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:106:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCardAttacked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCardAttacked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:110:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getAffectedRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getAffectedRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:114:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setAffectedRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setAffectedRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:118:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:122:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:126:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:130:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setX' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:134:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:138:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setY' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Action.java:142:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:1:9: Name 'GameLogic' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:12:8: Unused import - java.lang.reflect.Array. [UnusedImports]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:16:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:18:39: Parameter cardNode should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:18:60: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:28:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:33:41: Parameter outputNode should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:33:63: Parameter cards should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:40:44: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:40:55: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:47:44: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:47:55: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:47:70: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:59:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:69:44: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:69:55: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:69:70: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:83:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:83:44: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:83:55: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:92:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:94:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:102:22: '4' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:102:45: '4' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:113:40: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:113:51: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:113:67: Parameter handIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:116:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:146:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:146:45: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:146:56: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:146:72: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:160:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:160:44: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:160:55: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:160:71: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:170:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:170:63: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:190:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:190:50: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:190:65: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:194:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:194:54: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:194:67: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:196:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:196:44: '3' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:196:56: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:196:60: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:197:60: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:197:63: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:198:60: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:198:63: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:199:33: '3' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:199:60: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:203: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:203:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:203:49: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:203:60: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:203:76: Parameter handIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:203:89: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:244:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:244:56: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:244:67: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:244:83: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:262:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:262:48: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:262:59: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:262:75: Parameter x should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:262:82: Parameter y should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:262:89: '{' at column 89 should have line break after. [LeftCurly]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:262:89: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:262:90: Empty statement. [EmptyStatement]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:281:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:281:52: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:281:63: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:299:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:299:40: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:299:53: Parameter frontRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:300:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:301:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:306: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:306:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:306:45: Parameter actionObj should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:306:67: Parameter attackerCoord should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:306:94: Parameter attackedCoord should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:319:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:319:48: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:319:59: Parameter coordinates should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:323: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:323:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:323:56: Parameter attackerCoord should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:323:83: Parameter attackedCoord should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:324:71: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:328:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:328:41: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:328:52: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:328:68: Parameter attackerCoord should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:329:41: Parameter attackedCoord should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:329:68: Parameter typeOfAction should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:335: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:359:35: '3' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:366: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:372: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:376:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:390:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:390:44: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:390:55: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:390:71: Parameter attackerCoord should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:416:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:425:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:427:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:451:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:451:45: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:451:56: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:451:72: Parameter affectedRow should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:470: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:471: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:477: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:490:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:490:44: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:490:55: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:494:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:496:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:502:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:502:50: Parameter game should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Commands.java:502:61: Parameter command should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:1:9: Name 'GameLogic' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:7:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:29: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:29:17: Parameter gameParameters should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:29:48: Parameter playerOne should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:29:66: Parameter playerTwo should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:29:84: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:43:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:52:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'runGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'runGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:52:25: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:56:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:60:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:66: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:67: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:85:25: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:90:63: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:91:63: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:94:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:101:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:111:41: Parameter playerOneWins should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:119:41: Parameter playerTwoWins should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:127:44: Parameter totalGamesPlayed should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:131:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'isHeroDied' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'isHeroDied' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:135:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setHeroDied' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setHeroDied' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:135:29: Parameter heroDied should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:139:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getNrOfRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getNrOfRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:143:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setNrOfRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setNrOfRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:143:30: Parameter nrOfRound should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:147:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getNrTurnsTaken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getNrTurnsTaken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:151:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setNrTurnsTaken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setNrTurnsTaken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:151:33: Parameter nrTurnsTaken should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:155:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'isNewRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'isNewRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:159:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setNewRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setNewRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:159:29: Parameter newRound should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:163:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:167:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:167:26: Parameter table should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:171:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:175:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:175:25: Parameter turn should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:179:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getShuffleSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getShuffleSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:183:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setShuffleSeed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setShuffleSeed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:183:32: Parameter shuffleSeed should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:187:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:191:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setPlayers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:191:28: Parameter players should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:195:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:199:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\GameLogic\Game.java:199:28: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:1:9: Name 'Hands' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:16:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'removeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'removeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:16:28: Parameter handIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:20:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:20:25: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:24:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'getNrCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'getNrCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:28:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'setNrCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'setNrCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:28:34: Parameter nrCardsInHand should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:32:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:36:5: Class 'Hand' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Hand' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Hands\Hand.java:36:26: Parameter cards should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\main\Main.java:12:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\main\Main.java:13:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\main\Main.java:88: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\main\Main.java:89: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\main\Main.java:91: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:1:9: Name 'Players' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:7:8: Unused import - fileio.GameInput. [UnusedImports]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:21:19: Parameter decks should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:21:32: Parameter gameParameters should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:21:63: Parameter player should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:21:75: Parameter shuffleSeed should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:42:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:46:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:46:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:50:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCurrentGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCurrentGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:54:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setCurrentGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setCurrentGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:54:32: Parameter currentGame should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:58:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getAllDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getAllDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:62:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setAllDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setAllDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:62:29: Parameter allDecks should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:66:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:70:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:70:25: Parameter hand should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:74:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:78:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDeckIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDeckIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:78:28: Parameter deckIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:82:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:86:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Players\Player.java:86:25: Parameter hero should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:1:9: Name 'Table' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:6:8: Unused import - java.lang.reflect.Array. [UnusedImports]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:17:29: '4' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:23:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'placeCardOnTable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'placeCardOnTable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:23:34: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:23:49: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:28:26: '3' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:32:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:34:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:39:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'checkRowAvailability' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'checkRowAvailability' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:39:41: Parameter playerIdx should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:39:56: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:44:26: '3' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:49:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:49:49: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:53:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:53:50: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:59:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getCoordinates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getCoordinates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:63:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setCoordinates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setCoordinates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:63:32: Parameter coordinates should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:67:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getNrCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getNrCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:71:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setNrCardsInHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setNrCardsInHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:71:34: Parameter nrCardsInHand should be final. [FinalParameters]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:75:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'getCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'getCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:79:5: Class 'Table' looks like designed for extension (can be subclassed), but the method 'setCards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Table' final or making the method 'setCards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Stefan\OneDrive\Desktop\tema_mea_oop\.\tema\src\Table\Table.java:79:26: Parameter cards should be final. [FinalParameters]
Audit done.
Checkstyle ends with 562 errors.
